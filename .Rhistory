library(rhythm.metrics)
library(dplyr)
plot_delta_cv(df, cv_label, utterance_id, cv_duration, save_fig=F)
varco_cv(df)
df <- data.frame (cv_label  = c("consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel"),
utterance_id = c("utt_1", "utt_1", "utt_1", "utt_1",
"utt_2", "utt_2", "utt_2", "utt_2",
"utt_3", "utt_3", "utt_3", "utt_3",
"utt_4", "utt_4", "utt_4", "utt_4"),
cv_duration = c(0.1, 0.8, 0.2, 0.5,
0.3, 0.3, 0.4, 0.7,
0.3, 0.88, 0.5, 0.9,
0.3, 0.57, 0.4, 0.97),
utterance_duration = c(2.4, 2.4, 2.4, 2.4,
2.7, 2.7, 2.7, 2.7,
3.4, 3.4, 3.4, 3.4,
1.8, 1.8, 1.8, 1.8))
delta_cv(df, df$cv_label, df$utterance_id, df$cv_duration)
plot_delta_cv(df, cv_label, utterance_id, cv_duration, save_fig=F)
varco_cv(df)
plot_varco_cv(df, cv_label, utterance_id, cv_duration)
plot_delta_cv(df, cv_label, utterance_id, cv_duration)
# install.packages("devtools")
# devtools::install_github("congzhang365/rhythm.metrics")
library(rhythm.metrics)
library(dplyr)
library(rhythm.metrics)
library(dplyr)
df <- data.frame (cv_label  = c("consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel"),
utterance_id = c("utt_1", "utt_1", "utt_1", "utt_1",
"utt_2", "utt_2", "utt_2", "utt_2",
"utt_3", "utt_3", "utt_3", "utt_3",
"utt_4", "utt_4", "utt_4", "utt_4"),
cv_duration = c(0.1, 0.8, 0.2, 0.5,
0.3, 0.3, 0.4, 0.7,
0.3, 0.88, 0.5, 0.9,
0.3, 0.57, 0.4, 0.97),
utterance_duration = c(2.4, 2.4, 2.4, 2.4,
2.7, 2.7, 2.7, 2.7,
3.4, 3.4, 3.4, 3.4,
1.8, 1.8, 1.8, 1.8))
plot_varco_cv(df, cv_label, utterance_id, cv_duration)
percentage_v(df)
percentage_v(df)
percentage_v(df, v_label="vowel")
plot_percentage_v(df, v_label="vowel", utterance_id, cv_duration)
# install.packages("devtools")
# devtools::install_github("congzhang365/rhythm.metrics")
library(rhythm.metrics)
library(dplyr)
library(rhythm.metrics)
library(dplyr)
plot_varco_cv(df, cv_label, utterance_id, cv_duration)
df <- data.frame (cv_label  = c("consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel"),
utterance_id = c("utt_1", "utt_1", "utt_1", "utt_1",
"utt_2", "utt_2", "utt_2", "utt_2",
"utt_3", "utt_3", "utt_3", "utt_3",
"utt_4", "utt_4", "utt_4", "utt_4"),
cv_duration = c(0.1, 0.8, 0.2, 0.5,
0.3, 0.3, 0.4, 0.7,
0.3, 0.88, 0.5, 0.9,
0.3, 0.57, 0.4, 0.97),
utterance_duration = c(2.4, 2.4, 2.4, 2.4,
2.7, 2.7, 2.7, 2.7,
3.4, 3.4, 3.4, 3.4,
1.8, 1.8, 1.8, 1.8))
plot_varco_cv(df, cv_label, utterance_id, cv_duration)
plot_percentage_v(df, v_label="vowel", utterance_id, cv_duration)
rpvi_c(df, c_label="consonant")
plot_rpvi(df, c_label="consonant", utterance_id, cv_duration)
plot_rpvi(df, c_label="consonant", utterance_id, cv_duration)
npvi_v(df, c_label="consonant")
npvi_v(df, c_label="vowel")
npvi_v(df, v_label="vowel")
plot_npvi(df, v_label="vowel", utterance_id, cv_duration)
delta_cv(df)
delta_cv(df, df$cv_label, df$utterance_id, df$cv_duration)
df <- data.frame (cv_label  = c("consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel",
"consonant", "vowel", "consonant", "vowel"),
utterance_id = c("utt_1", "utt_1", "utt_1", "utt_1",
"utt_2", "utt_2", "utt_2", "utt_2",
"utt_3", "utt_3", "utt_3", "utt_3",
"utt_4", "utt_4", "utt_4", "utt_4"),
cv_duration = c(0.1, 0.8, 0.2, 0.5,
0.3, 0.3, 0.4, 0.7,
0.3, 0.88, 0.5, 0.9,
0.3, 0.57, 0.4, 0.97),
utterance_duration = c(2.4, 2.4, 2.4, 2.4,
2.7, 2.7, 2.7, 2.7,
3.4, 3.4, 3.4, 3.4,
1.8, 1.8, 1.8, 1.8))
df
head(df)
df
devtools::document()
devtools::install()
setwd
setwd('..')
devtools::install('rhythm.metrics')
?rhythm.metrics
??rhythm.metrics
?delta_cv
devtools::install('rhythm.metrics')
setwd("C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/")
#create a list of the files from your target directory
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
#initiate a blank data frame, each iteration of the loop will append the data from the given file to this variable
data <- data.frame(file_list)
data <- data %>%
separate(file_list, c("speaker", "vowel", 'task', 'tone', 'previous_tone', 'rep', 'type'), sep = "_", remove = F)
data <- as.data.frame(unclass(data),stringsAsFactors=TRUE)
summary(data)
s.data <- subset(data, data$vowel=="i")
summary(s.data)
View(data)
require(tidyverse)
require(data.table)
library(data.table)
library(tidyverse)
library(data.table)
setwd("C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/")
#create a list of the files from your target directory
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
#initiate a blank data frame, each iteration of the loop will append the data from the given file to this variable
data <- data.frame(file_list)
data %>% stringr::str_detect('Q.wav')
d <-  stringr::str_detect('Q.wav', data)
d <-  stringr::str_detect('Q.wav', data$file_list)
data$type <-  ifelse(stringr::str_detect('Q.wav', data$file_list), 'Q', 'S')
View(data)
data$type <-  ifelse(stringr::str_detect('*Q.wav', data$file_list), 'Q', 'S')
data$type <-  ifelse(stringr::str_detect(regex('*Q.wav'), data$file_list), 'Q', 'S')
library(stringr)
stringr::str_detect(regex('*Q.wav'), data$file_list)
data$type <-  ifelse(stringr::str_detect(regex('$Q.wav'), data$file_list), 'Q', 'S')
View(data)
data$type <-  ifelse(stringr::str_detect(data$file_list), 3regex('$Q.wav'), 'Q', 'S')
data$type <-  ifelse(stringr::str_detect(data$file_list), regex('$Q.wav'), 'Q', 'S')
data$type <-  ifelse(stringr::str_detect(data$file_list, regex('$Q.wav')), 'Q', 'S')
View(data)
data$type <-  ifelse(stringr::str_detect(data$file_list, regex('*Q.wav')), 'Q', 'S')
data$type <-  ifelse(stringr::str_detect(data$file_list, regex('?Q.wav')), 'Q', 'S')
data$type <-  ifelse(stringr::str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
View(data)
data$speaker <- str_extract(data$file_list, regex('SJ[0-90-90-9'))
data$speaker <- str_extract(data$file_list, regex('SJ[0-90-90-9]'))
View(data)
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
View(data)
table(data$speaker)
table(data$type)
file_list <- list.files(path="C:/Users/sprin/Desktop/onedrive/Oxford Research/Thesis related/data/2017/ci/small/ci_qs_small/not analysed/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(stringr::str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
table(data$speaker)
table(data$type)
file_list <- list.files(path="C:/Users/sprin/Desktop/onedrive/Oxford Research/Thesis related/data/2017/ci/small/ci_qs_small/T0/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(stringr::str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
table(data$speaker)
table(data$type)
View(data)
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Desktop/onedrive/Oxford Research/Thesis related/data/2017/ci/small/ci_qs_small/not analysed/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Desktop/onedrive/Oxford Research/Thesis related/data/2017/ci/small/ci_qs_small/not analysed/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Desktop/onedrive/Oxford Research/Thesis related/data/2017/ci/small/ci_qs_small/T0/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Desktop/onedrive/Oxford Research/Thesis related/data/2017/ci/small/ci_qs_small/not analysed/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$speaker, data$tone)
table(data$speaker, data$tone)
table(data$speaker, data$type)
####
file_list <- list.files(path="C:/Users/sprin/Desktop/onedrive/Oxford Research/Thesis related/data/2017/ci/small/ci_qs_small/not analysed/", pattern = 'wav')
data <- data.frame(file_list)
####
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
# Disyllabic YNQ & S
file_list1 <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data1 <- data.frame(file_list1)
file_list2 <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/", pattern = 'wav')
data2 <- data.frame(file_list2)
data <- rbind(data1, data2)
data <- cbind(data1, data2)
View(data)
data <- rbind(data1, data2)
data <- rbind(data1$file_list1, data2$file_list2)
data <- rbind(data1, data2)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/", pattern = 'wav')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
table(data$speaker, data$type, data$tone)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data <- data.frame(file_list)
View(data)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/", pattern = 'wav')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
table(data$speaker, data$type, data$tone)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/", pattern = 'wav')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/", pattern = 'wav')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not analysed/", pattern = 'wav')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
table(data$speaker, data$type, data$tone)
View(data)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/annotated/", pattern = 'wav')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not annotated/", pattern = 'wav')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/annotated/", pattern = 'wav')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not_annotated/", pattern = 'wav')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
################textgrids#############
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/annotated/", pattern = 'TextGrid')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.TextGrid')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
table(data$speaker, data$type, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not_annotated/", pattern = 'TextGrid')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.TextGrid')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
####
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not_annotated/", pattern = 'TextGrid')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.TextGrid')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
# Disyllabic YNQ & S
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/annotated/", pattern = 'TextGrid')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not_annotated/", pattern = 'TextGrid')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.TextGrid')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_DisyllabicQ/audio/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
##### Disyllabic CC & S: annotated wavs
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/annotated/", pattern = 'wav')
data <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
##### Disyllabic CC & S: annotated wavs
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
table(data$speaker, data$type, data$tone)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+Q.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+C.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+C.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+C.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+C.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/annotated/", pattern = 'wav')
data1 <- data.frame(file_list)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data2 <- data.frame(file_list)
data <- rbind(data1, data2)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+C.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
file_list <- list.files(path="C:/Users/sprin/Dropbox (Personal)/Journal_Article/TJ_CC/audio/ci_cc/not_annotated/", pattern = 'wav')
data <- data.frame(file_list)
data$type <-  ifelse(str_detect(data$file_list, regex('.?+C.wav')), 'Q', 'S')
data$speaker <- str_extract(data$file_list, regex('SJ[0-9][0-9][0-9]'))
data$tone <- str_extract(data$file_list, regex('T[0-4]T[0-4]'))
table(data$speaker)
table(data$type)
table(data$speaker, data$tone)
table(data$speaker, data$type)
